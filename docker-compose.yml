services:
  postgres:
    image: postgres
    environment:
      TZ: America/Cuiaba
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  rabbitmq:
    image: 'rabbitmq:3-management'
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - '15672:15672'
      - '5672:5672'
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network

  transactions:
    build:
      context: .
      dockerfile: ./src/transactions/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  payable:
    build:
      context: .
      dockerfile: ./src/payable/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  balance:
    build:
      context: .
      dockerfile: ./src/balance/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  users:
    build:
      context: .
      dockerfile: ./src/users/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  customers:
    build:
      context: .
      dockerfile: ./src/customers/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  api-gateway:
    build:
      context: .
      dockerfile: ./src/gateway/Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    depends_on:
      - rabbitmq
      - api-gateway
    networks:
      - app-network

  grafana:
    image: grafana/grafana
    ports:
      - '3030:3000'
    depends_on:
      - prometheus
    networks:
      - app-network

  portainer:
    image: portainer/portainer-ce
    ports:
      - '9000:9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - app-network

volumes:
  postgres-data:
  rabbitmq-data:
  portainer_data:

networks:
  app-network:
